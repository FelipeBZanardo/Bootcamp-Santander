-------------------------------------------------------------------------------------------------------------------------------------
Problema/Domínio:
-------------------------------------------------------------------------------------------------------------------------------------

"Um banco oferece aos seus clientes dois tipos de contas (corrente e poupança), 
as quais possuem as funcionalidades de depósito, saque e transferência (entre contas da própria instituição)"

-------------------------------------------------------------------------------------------------------------------------------------
Pilares da orientação a objeto:
-------------------------------------------------------------------------------------------------------------------------------------

--------------------
1) Abstração:
--------------------

	Habilidade de concentra-se nos aspectos essenciais de um domínio, 
	ignorando características menos importantes ou acidentais

Entidade: é uma classe importante dentro da aplicação

--------------------
2) Encapsualamento:
--------------------

	Encapsular significa esconder a implementação dos objetos, 
	criando assim interfaces de uso mais concisas e fáceis de usar/entender. 
	O encapsulamento favorece principalmente dois aspectos de um sistema: a manutenção e a evolução

--------------------
3) Herança:
--------------------

	Permite que você defina uma classe filha que reutiliza (herda), 
	estende ou modifica o comportamento de uma classe pai. 
	A classe cujos membros são herdados é chamda de classe base. 
	A classe que herda os membros da classe base é chamada de classe derivada.

Interface: uma classe abstrata com todos os métodos abrstratos

--------------------
4) Polimorfismo:
--------------------

	Capacidade de um objeto poder ser referenciado de várias formas, ou seja, 
	é a capacidade de tratar objetos criados a partir das classes específicas como objetos de uma classe genérica.
	Cuidado, polimorfismo não quer dizer que o objeto fica se transformando, muito pelo contrário, 
	um objeto nasce de um tipo e morre daquele tipo, o que pode mudar é a maneira como nos referimos a ele

-------------------------------------------------------------------------------------------------------------------------------------
Desafio:
-------------------------------------------------------------------------------------------------------------------------------------

Agora é sua hora de brilhar, use todo seu conhecimento em Java e Orientação a Objetos 
para evoluir o projeto criado nesta aula. Para isso, seguem algumas sugestões:

- Use todo o seu conhecimento para estender o domínio, incluindo novas classes, atributos e/ou métodos.
	criar um método no banco para exibir a lista de clientes

- incluir o Lombock ao projeto para reduzir sua verbosidade de código